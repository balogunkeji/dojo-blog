{"version":3,"sources":["Navbar.jsx","BlogList.jsx","Loading.js","useFetch.js","Home.jsx","Create.jsx","Blogdetails.js","Notfound.js","App.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","map","blog","id","author","Loading","loading","useFetch","url","useState","data","setData","setLoading","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","history","useHistory","onClick","method","push","Create","setTitle","body","setBody","setAuthor","isPending","setisPending","onSubmit","e","preventDefault","headers","JSON","stringify","type","required","value","onChange","target","disabled","BlogDetails","useParams","Notfound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dad51e2a.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <h1>Dojo blog</h1>\r\n            <div className=\"links\">\r\n               <Link to = '/'>HomePage</Link>\r\n               <Link to ='/create'>New blog</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({ blogs, title }) => {\r\n  return (\r\n    <div className=\"blog-preview\">\r\n      <h2>{title}</h2>\r\n      {blogs.map((blog) => (\r\n        <div className=\"blog-preview\" key={blog.id}>\r\n          <Link to={`/blogs/${blog.id}`}>\r\n            <h2>{blog.title}</h2>\r\n            <p> Written by {blog.author}</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","const Loading = (loading) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"yellow\"></div>\r\n      <div className=\"red\"></div>\r\n      <div className=\"blue\"></div>\r\n      <div className=\"violet\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","// making a custom hooks\r\nimport {useState, useEffect} from 'react'\r\n\r\nconst useFetch = (url) => {\r\n\r\n const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n\r\n    const abortCont = new AbortController();\r\n    setTimeout(() =>{\r\n      fetch(url, {signal: abortCont.signal})\r\n    .then((res) => {\r\n      if(!res.ok){\r\n        throw Error('could not load data')\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((data) => {\r\n      setData(data);\r\n      setLoading(false)\r\n      setError(null)\r\n    })\r\n    .catch(err => {\r\n      if(err.name==='AboutError'){\r\n        console.log('Fetched Aborted')\r\n      } else{\r\n        setError(err.message)\r\n      setLoading(false)\r\n      }\r\n    })\r\n    }, 2000);\r\n\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n    return{data,loading,error};\r\n}\r\n \r\nexport default useFetch;","// import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport BlogList from \"./BlogList\";\r\nimport Loading from './Loading'\r\nimport useFetch from './useFetch'\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const {data:blogs, loading, error} = useFetch('http://localhost:8000/blogs')\r\n  const handleClick = () => {\r\n\r\n    fetch('http://localhost:8000/blogs', {\r\n        method: 'DELETE',\r\n\r\n    }).then(() => {\r\n      history.push('/create')\r\n  })\r\n  }\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {error && <div>{error}</div>}\r\n      {loading && <Loading/>}\r\n    {blogs && <BlogList blogs={blogs} title=\"All Blogs!\" />}\r\n    <button className = '' onClick = {handleClick}>Delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Create = () => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('mario');\r\n    const [isPending, setisPending] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = { title,body,author };\r\n\r\n        setisPending(true)\r\n\r\n        fetch('http://localhost:8000/blogs', {\r\n            method: 'POST',\r\n            headers: {'content-Type': 'application/json'},\r\n            body: JSON.stringify(blog)\r\n        }).then(() => {\r\n            setisPending(false)\r\n            history.push('/')\r\n        })\r\n    }\r\n    return ( \r\n        <div className = \"create\">\r\n            <h2>A New Blog</h2>\r\n            <form onSubmit = {handleSubmit}>\r\n                <label>Blog title:</label>\r\n                <input type ='text' \r\n                required \r\n                value={title}\r\n                onChange = {(e) => setTitle(e.target.value)}\r\n                />\r\n                <label>Blog body</label>\r\n                <textarea required value={body}\r\n                onChange = {(e) => setBody(e.target.value)}></textarea>\r\n                <label>Blog author:</label>\r\n                <select value={author}\r\n                onChange = {(e) => setAuthor(e.target.value)}>\r\n                <option value='mario'>Mario</option>\r\n                <option value='yushi'>Yushi</option>\r\n                </select>\r\n                {!isPending && <button>Add blog</button>}\r\n                {isPending && <button disabled>Adding blog...</button>}\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router\";\r\nimport Loading from \"./Loading\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams();\r\n    const{data:blog,error,loading} = useFetch('http://localhost:8000/blogs/' + id)\r\n    const history = useHistory()\r\n    const handleClick = () => {\r\n\r\n      fetch('http://localhost:8000/blogs/' +blog.id, {\r\n          method: 'DELETE',\r\n\r\n      }).then(() => {\r\n        history.push('/')\r\n    })\r\n    }\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n      {loading && <Loading />}\r\n      {error && <div>{error}</div>}\r\n      {blog && (\r\n          <article>\r\n              <h2>{blog.title}</h2>\r\n              <p>Written by {blog.author}</p>\r\n              <div>{blog.body}</div>\r\n            <button onClick = {handleClick}>Delete</button>\r\n          </article>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst Notfound = () => {\r\n    return ( \r\n        <div className = 'not-found'>\r\n            <h2>Sorry, page not found</h2>\r\n            <Link to = '/'>Back to home page</Link>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Notfound;","import Navbar from \"./Navbar\";\r\nimport Home from \"./Home\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Create from \"./Create\";\r\nimport BlogDetails from \"./Blogdetails\";\r\nimport Notfound from \"./Notfound\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <Create />\r\n            </Route>\r\n            <Route path=\"/blogs/:id\">\r\n              <BlogDetails />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <Notfound/>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}